<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>